Mode class must be carefully designed.  has mode state.  1-5.. but needs pan stata for each.  pan state x and y maybe.. multiple gestures for each?  should each mode be a an object?  decouple code by simply sender pan cgpoints to mode class.  when mode class changes values use KVO to update any UI.  AudioController should reflect realtime updates of any global/modal changes.

drawer_helper should be remade as a Mode object called drawMode.  all the algo and point handling stuff be handled by the simple method "setWithPan:" or even setWithPoint,  since other things like touches began with send points to these mode setters.  again audiocontroller runs off of inspecting global sub objects.

component in ControlsView delegate main button tapped sets modeState.  what does tag do?  do we need it? sub buttons set what? sub mode state?  maybe if mode is: component=0 & subMode = 1 then it means we are in sample mode and "end" sample.  so therefore pan gesture goes to 0 switch case thn into 1 switch case and sets the end.."